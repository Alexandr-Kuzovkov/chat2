version: '3.7'

x-anchors:
  environment: &env
    NODE_ENV: ${NODE_ENV:-development}

services:
  chat:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./modules:/usr/src/app/modules
      - ./public:/usr/src/app/public
      - ./users_files:/usr/src/app/users_files
      - ./views:/usr/src/app/views
      - ./ice.json:/usr/src/app/ice.json:ro
      - ./test.js:/usr/src/app/test.js
      - ./server_http.js:/usr/src/app/server_http.js
      - ./server_https.js:/usr/src/app/server_https.js
      - ./gulpfile.js:/usr/src/app/gulpfile.js
    dns: 8.8.8.8
    ports:
      - "8000:8000"
    environment: *env
    restart: unless-stopped

  redis:
    image: redis:4.0-alpine
    expose:
      - 6379
    restart: unless-stopped

  nginx:
    image: nginx:1.15-alpine
    depends_on:
     - chat
    ports:
      - "8005:80"
      - "443:443"
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: unless-stopped

  coturn:
    build:
      context: ./docker/coturn
      dockerfile: Dockerfile
    ports:
      - "3478:3478"
      - "3479:3479"
      - "5349:5349"
      - "5350:5350"
    volumes:
      - ./docker/coturn/turnserver-alt.conf:/etc/turnserver.conf
      - ./docker/certbot/conf:/etc/letsencrypt

